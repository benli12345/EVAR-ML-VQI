#R version 4.2.1
#Load VQI EVAR data (available with approval through SVS PSO https://www.vqi.org/data-analysis/)
library(readr)
data <- read_csv("data_EVAR.csv")

#Split data into train (70%) and test (30%) sets
library(caTools)
set.seed(123)
sample <- sample.split(data$DEATH_1yr, SplitRatio = 0.7)
train <- subset(data, sample == TRUE)
test <- subset(data, sample == FALSE)

#Apply Random Over-Sample Examples (ROSE) for class balance on training set
library(ROSE)
train <- ROSE(DEATH_1yr ~ ., data = train, N = 50000, seed = 123)$data

#Define predictors
library(dplyr)
predictors_train <- train %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, DYSRHYTHMIA, PRIOR_STROKE, COPD, DIALYSIS, UNFITOAAA, LIVINGSTATUS, FUNCSTATUS, PRIOR_AORSURG, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PRIOR_MAJAMP, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, MAINAORDEV)
predictors_test <- test %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, DYSRHYTHMIA, PRIOR_STROKE, COPD, DIALYSIS, UNFITOAAA, LIVINGSTATUS, FUNCSTATUS, PRIOR_AORSURG, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PRIOR_MAJAMP, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, MAINAORDEV)

#Train pre-op models
library(caret)
library(xgboost)
library(ranger)
library(naivebayes)
library(e1071)
library(nnet)
train_control <- trainControl(method = "cv", number = 10) #10-fold cross-validation

#Train XGBoost
XGBgrid <- expand.grid(max_depth = c(2,3,4,5,6,7,8,9), nrounds = (1:10)*50, eta = c(0.4,0.3,0.2,0.1,0.05,0.01,0.001), gamma = c(0,0.1,1,1.5,2), subsample = c(0.5,0.6,0.7,0.8,0.9,1), min_child_weight = c(1,3,5,7,10), colsample_bytree = c(0.5,0.6,0.7,0.8,0.9,1) #XGBoost grid search for hyperparameters
XGB <- train(x = as.matrix(predictors_train), y = train$DEATH_1yr, data = train, method = "xgbTree", metric = "ROC", trControl = train_control, tuneGrid = XGBgrid)

#Train random forest
RFgrid <- expand.grid(mtry = 2:4, splitrule = "gini", min.node.size = c(10,20))
RF <- train(x = predictors_train, y = train$DEATH_1yr, data = train, method = "ranger", metric = "ROC", trControl = train_control, tuneGrid = RFgrid)

#Train naive bayes
NBgrid <- expand.grid(usekernel = c(TRUE, FALSE), fL = 0:5, adjust = seq(0,5,by=1))
NB <- train(x = predictors_train, y = as.factor(train$DEATH_1yr), data = train, method = "naive_bayes", metric = "ROC", trControl = train_control, tuneGrid = NBgrid)

#Train support vector machine
SVMgrid <- expand.grid(C = c(0.001, 0.01, 0.1, 1, 10, 100, 10000))
SVM <- train(x = predictors_train, y = train$DEATH_1yr, data = train, method = "svmRadial", metric = "ROC", trControl = train_control, tuneGrid = SVMgrid)

#Train multilayer perceptron artificial neural network
NNETgrid <- expand.grid(size = seq(1,10,by=1), decay = seq(0.1,0.5,by=0.1))
NNET <- train(x = predictors_train, y = train$DEATH_1yr, data = train, method = "nnet", metric = "ROC", trControl = train_control, tuneGrid = NNETgrid)

#Train logistic regression
LRgrid <- expand.grid(C = c(0.001, 0.01, 0.1, 1, 10, 100, 10000))
LR <- train(x = predictors_train, y = train$DEATH_1yr, data = train, method = "glm", metric = "ROC", trControl = train_control, tuneGrid = LRgrid, family = "binomial")

#Evaluate pre-op models on test set
library(pROC)

XGB_pred <- predict(XGB, as.matrix(predictors_test))
auc(test$DEATH_1yr, XGB_pred)
ci.auc(test$DEATH_1yr, XGB_pred)
XGB_pred_0.5 <- ifelse(XGB_pred > 0.5,1,0)
confusionMatrix(as.factor(test$DEATH_1yr), as.factor(XGB_pred_0.5))

RF_pred <- predict(RF, predictors_test)
auc(test$DEATH_1yr, RF_pred$predictions)
ci.auc(test$DEATH_1yr, RF_pred$predictions)
RF_pred_0.5 <- ifelse(RF_pred$predictions > 0.5,1,0)
confusionMatrix(as.factor(test$DEATH_1yr), as.factor(RF_pred_0.5))

NB_pred <- predict(NB, predictors_test)
auc(test$DEATH_1yr, NB_pred)
ci.auc(test$DEATH_1yr, NB_pred)
NB_pred_0.5 <- ifelse(NB_pred > 0.5,1,0)
confusionMatrix(as.factor(test$DEATH_1yr), as.factor(NB_pred_0.5))

SVM_pred <- predict(SVM, predictors_test)
auc(test$DEATH_1yr, SVM_pred)
ci.auc(test$DEATH_1yr, SVM_pred)
SVM_pred_0.5 <- ifelse(SVM_pred > 0.5,1,0)
confusionMatrix(as.factor(test$DEATH_1yr), as.factor(SVM_pred_0.5))

NNET_pred <- predict(NNET, predictors_test)
auc(test$DEATH_1yr, NNET_pred)
ci.auc(test$DEATH_1yr, NNET_pred)
NNET_pred_0.5 <- ifelse(NNET_pred > 0.5,1,0)
confusionMatrix(as.factor(test$DEATH_1yr), as.factor(NNET_pred_0.5))

LR_pred <- predict(LR, predictors_test)
auc(test$DEATH_1yr, LR_pred)
ci.auc(test$DEATH_1yr, LR_pred)
LR_pred_0.5 <- ifelse(LR_pred > 0.5,1,0)
confusionMatrix(as.factor(test$DEATH_1yr), as.factor(LR_pred_0.5))

#XGBoost selected as best performing model

#Generate ROC curves
library(ROCR)
XGB_perf <- prediction(XGB_pred, test$DEATH_1yr)
XGB_perf <- performance(XGB_perf, "tpr", "fpr")
plot(XGB_perf)
abline(a=0,b=1)

#Generate calibration plot
library(gbm)
calibrate.plot(test$DEATH_1yr, XGB_pred)

#Calculate Brier Score
library(DescTools)
BrierScore(XGB_pred, test$DEATH_1yr)

#Calculate variable importance scores for top 10 predictors
importance_matrix <- xgb.importance(names(predictors_test), model = XGB)
xgb.plot.importance(importance_matrix, top_n = 10)

#Subgroup analysis based on age
test_under75 <- test[test$AGE<75, ]
test_over75 <- test[test$AGE>75, ]
predictors_test_under75 <- test_under75 %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, DYSRHYTHMIA, PRIOR_STROKE, COPD, DIALYSIS, UNFITOAAA, LIVINGSTATUS, FUNCSTATUS, PRIOR_AORSURG, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PRIOR_MAJAMP, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, MAINAORDEV)
predictors_test_over75 <- test_over75 %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, DYSRHYTHMIA, PRIOR_STROKE, COPD, DIALYSIS, UNFITOAAA, LIVINGSTATUS, FUNCSTATUS, PRIOR_AORSURG, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PRIOR_MAJAMP, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, MAINAORDEV)

pred_under75 <- predict(XGB, as.matrix(predictors_test_under75))
auc(test_under75$DEATH_1yr, pred_under75)
ci.auc(test_under75$DEATH_1yr, pred_under75)

pred_over75 <- predict(XGB, as.matrix(predictors_test_over75))
auc(test_over75$DEATH_1yr, pred_over75)
ci.auc(test_over75$DEATH_1yr, pred_over75)

perf_under75 <- prediction(pred_under75, test_under70$DEATH_1yr)
perf_under75 <- performance(perf_under75, "tpr", "fpr")

perf_over75 <- prediction(pred_over75, test_over70$DEATH_1yr)
perf_over75 <- performance(perf_over75, "tpr", "fpr")

plot(perf_under75)
plot(perf_over75, add = TRUE, col = 'blue')
abline(a=0,b=1)

#Subgroup analysis based on sex
test_male <- test[test$SEX==1, ]
test_female <- test[test$SEX==2, ]
predictors_test_male <- test_male %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, DYSRHYTHMIA, PRIOR_STROKE, COPD, DIALYSIS, UNFITOAAA, LIVINGSTATUS, FUNCSTATUS, PRIOR_AORSURG, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PRIOR_MAJAMP, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, MAINAORDEV)
predictors_test_female <- test_female %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, DYSRHYTHMIA, PRIOR_STROKE, COPD, DIALYSIS, UNFITOAAA, LIVINGSTATUS, FUNCSTATUS, PRIOR_AORSURG, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PRIOR_MAJAMP, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, MAINAORDEV)

pred_male <- predict(XGB, as.matrix(predictors_test_male))
auc(test_male$DEATH_1yr, pred_male)
ci.auc(test_male$DEATH_1yr, pred_male)

pred_female <- predict(XGB, as.matrix(predictors_test_female))
auc(test_female$DEATH_1yr, pred_female)
ci.auc(test_female$DEATH_1yr, pred_female)

perf_male <- prediction(pred_male, test_male$DEATH_1yr)
perf_male <- performance(perf_male, "tpr", "fpr")

perf_female <- prediction(pred_female, test_female$DEATH_1yr)
perf_female <- performance(perf_female, "tpr", "fpr")

plot(perf_male)
plot(perf_female, add = TRUE, col = 'blue')
abline(a=0,b=1)

#Subgroup analysis based on race
test_white <- test[test$RACE==5, ]
test_nonwhite <- test[test$RACE_NEW!=5, ]
predictors_test_white <- test_white %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, DYSRHYTHMIA, PRIOR_STROKE, COPD, DIALYSIS, UNFITOAAA, LIVINGSTATUS, FUNCSTATUS, PRIOR_AORSURG, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PRIOR_MAJAMP, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, MAINAORDEV)
predictors_test_nonwhite <- test_nonwhite %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, DYSRHYTHMIA, PRIOR_STROKE, COPD, DIALYSIS, UNFITOAAA, LIVINGSTATUS, FUNCSTATUS, PRIOR_AORSURG, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PRIOR_MAJAMP, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, MAINAORDEV)

pred_white <- predict(XGB, as.matrix(predictors_test_white))
auc(test_white$DEATH_1yr, pred_white)
ci.auc(test_white$DEATH_1yr, pred_white)

pred_nonwhite <- predict(XGB, as.matrix(predictors_test_nonwhite))
auc(test_nonwhite$DEATH_1yr, pred_nonwhite)
ci.auc(test_nonwhite$DEATH_1yr, pred_nonwhite)

perf_white <- prediction(pred_white, test_white$DEATH_1yr)
perf_white <- performance(perf_white, "tpr", "fpr")

perf_nonwhite <- prediction(pred_nonwhite, test_nonwhite$DEATH_1yr)
perf_nonwhite <- performance(perf_nonwhite, "tpr", "fpr")

plot(perf_white)
plot(perf_nonwhite, add = TRUE, col = 'blue')
abline(a=0,b=1)

#Subgroup analysis based on ethnicity
test_hispanic <- test[test$ETHNICITY==1, ]
test_nonhispanic <- test[test$ETHNICITY==0, ]
predictors_test_hispanic <- test_hispanic %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, DYSRHYTHMIA, PRIOR_STROKE, COPD, DIALYSIS, UNFITOAAA, LIVINGSTATUS, FUNCSTATUS, PRIOR_AORSURG, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PRIOR_MAJAMP, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, MAINAORDEV)
predictors_test_nonhispanic <- test_nonhispanic %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, DYSRHYTHMIA, PRIOR_STROKE, COPD, DIALYSIS, UNFITOAAA, LIVINGSTATUS, FUNCSTATUS, PRIOR_AORSURG, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PRIOR_MAJAMP, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, MAINAORDEV)

pred_hispanic <- predict(XGB, as.matrix(predictors_test_hispanic))
auc(test_hispanic$DEATH_1yr, pred_hispanic)
ci.auc(test_hispanic$DEATH_1yr, pred_hispanic)

pred_nonhispanic <- predict(XGB, as.matrix(predictors_test_nonhispanic))
auc(test_nonhispanic$DEATH_1yr, pred_nonhispanic)
ci.auc(test_nonhispanic$DEATH_1yr, pred_nonhispanic)

perf_hispanic <- prediction(pred_hispanic, test_hispanic$DEATH_1yr)
perf_hispanic <- performance(perf_hispanic, "tpr", "fpr")

perf_nonhispanic <- prediction(pred_nonhispanic, test_nonhispanic$DEATH_1yr)
perf_nonhispanic <- performance(perf_nonhispanic, "tpr", "fpr")

plot(perf_hispanic)
plot(perf_nonhispanic, add = TRUE, col = 'blue')
abline(a=0,b=1)

#Subgroup analysis based on rurality
test_rural <- test[test$RUCA==10, ]
test_nonrural <- test[test$RUCA!=10, ]
predictors_test_rural <- test_rural %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, DYSRHYTHMIA, PRIOR_STROKE, COPD, DIALYSIS, UNFITOAAA, LIVINGSTATUS, FUNCSTATUS, PRIOR_AORSURG, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PRIOR_MAJAMP, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, MAINAORDEV)
predictors_test_nonrural <- test_nonrural %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, DYSRHYTHMIA, PRIOR_STROKE, COPD, DIALYSIS, UNFITOAAA, LIVINGSTATUS, FUNCSTATUS, PRIOR_AORSURG, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PRIOR_MAJAMP, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, MAINAORDEV)

pred_rural <- predict(XGB, as.matrix(predictors_test_rural))
auc(test_rural$DEATH_1yr, pred_rural)
ci.auc(test_rural$DEATH_1yr, pred_rural)

pred_nonrural <- predict(XGB, as.matrix(predictors_test_nonrural))
auc(test_nonrural$DEATH_1yr, pred_nonrural)
ci.auc(test_nonrural$DEATH_1yr, pred_nonrural)

perf_rural <- prediction(pred_rural, test_rural$DEATH_1yr)
perf_rural <- performance(perf_rural, "tpr", "fpr")

perf_nonrural <- prediction(pred_nonrural, test_nonrural$DEATH_1yr)
perf_nonrural <- performance(perf_nonrural, "tpr", "fpr")

plot(perf_rural)
plot(perf_nonrural, add = TRUE, col = 'blue')
abline(a=0,b=1)

#Subgroup analysis based on median Area Deprivation Index (ADI) percentile
test_ADIover50 <- test[test$ADI_NATRANK_MEDIAN>=50, ]
test_ADIunder50 <- test[test$ADI_NATRANK_MEDIAN<50, ]
predictors_test_ADIover50 <- test_ADIover50 %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, DYSRHYTHMIA, PRIOR_STROKE, COPD, DIALYSIS, UNFITOAAA, LIVINGSTATUS, FUNCSTATUS, PRIOR_AORSURG, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PRIOR_MAJAMP, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, MAINAORDEV)
predictors_test_ADIunder50 <- test_ADIunder50 %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, DYSRHYTHMIA, PRIOR_STROKE, COPD, DIALYSIS, UNFITOAAA, LIVINGSTATUS, FUNCSTATUS, PRIOR_AORSURG, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PRIOR_MAJAMP, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, MAINAORDEV)

pred_ADIover50 <- predict(XGB, as.matrix(predictors_test_ADIover50))
auc(test_ADIover50$DEATH_1yr, pred_ADIover50)
ci.auc(test_ADIover50$DEATH_1yr, pred_ADIover50)

pred_ADIunder50 <- predict(XGB, as.matrix(predictors_test_ADIunder50))
auc(test_ADIunder50$DEATH_1yr, pred_ADIunder50)
ci.auc(test_ADIunder50$DEATH_1yr, pred_ADIunder50)

perf_ADIover50 <- prediction(pred_ADIover50, test_ADIover50$DEATH_1yr)
perf_ADIover50 <- performance(perf_ADIover50, "tpr", "fpr")

perf_ADIunder50 <- prediction(pred_ADIunder50, test_ADIunder50$DEATH_1yr)
perf_ADIunder50 <- performance(perf_ADIunder50, "tpr", "fpr")

plot(perf_ADIover50)
plot(perf_ADIunder50, add = TRUE, col = 'blue')
abline(a=0,b=1)

#Subgroup analysis based on prior aortic intervention
test_prior <- test[test$PRIOR_AORSURG == 1, ]
test_noprior <- test[test$PRIOR_AORSURG == 0, ]
predictors_test_prior <- test_prior %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, DYSRHYTHMIA, PRIOR_STROKE, COPD, DIALYSIS, UNFITOAAA, LIVINGSTATUS, FUNCSTATUS, PRIOR_AORSURG, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PRIOR_MAJAMP, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, MAINAORDEV)
predictors_test_noprior <- test_noprior %>% select(REGIONID, CENTERID, PHYSICIANID, SURGYEAR, SURGMONTH, SURGWEEKDAY, AGE, SEX, BMI, RACE, ETHNICITY, RUCA, ADI_NATRANK_MEDIAN, PRIMARYINSURER, TRANSFER, HTN, DIABETES, PREOP_SMOKING, PRIOR_FAMAAA, PRIOR_CAD, R_PRIOR_CABGPTCA, PRIOR_CHF, DYSRHYTHMIA, PRIOR_STROKE, COPD, DIALYSIS, UNFITOAAA, LIVINGSTATUS, FUNCSTATUS, PRIOR_AORSURG, PRIOR_CEACAS, PRIOR_BYPASS, PRIOR_PTASTENT, PRIOR_MAJAMP, PREOP_ASA, PREOP_P2Y, PREOP_STATIN, PREOP_BETABLOCKER, PREOP_ACE, PREOP_ANTICOAG, HEMO_L, PREOP_CREAT_UMOL, STRESS, PREOP_EF, MAXAAADIA, ILIACANEUR, MAINAORDEV)

pred_prior <- predict(XGB, as.matrix(predictors_test_prior))
auc(test_prior$DEATH_1yr, pred_prior)
ci.auc(test_prior$DEATH_1yr, pred_prior)

pred_noprior <- predict(XGB, as.matrix(predictors_test_noprior))
auc(test_noprior$DEATH_1yr, pred_noprior)
ci.auc(test_noprior$DEATH_1yr, pred_noprior)

perf_prior <- prediction(pred_prior, test_prior$DEATH_1yr)
perf_prior <- performance(perf_prior, "tpr", "fpr")

perf_noprior <- prediction(pred_noprior, test_noprior$DEATH_1yr)
perf_noprior <- performance(perf_noprior, "tpr", "fpr")

plot(perf_prior)
plot(perf_noprior, add = TRUE, col = 'blue')
abline(a=0,b=1)

#Train and evaluate XGBoost for predicting secondary outcomes

XGB_REINT_1yr <- xgboost(data = as.matrix(predictors_train), label = as.numeric(train$REINT_1yr), nrounds = 200, verbose = TRUE, objective = 'binary:logistic', eval_metric = 'auc', max_depth = 3, eta = 0.3, gamma = 0, colsample_bytree = 0.6, min_child_weight = 1, subsample = 1) #hyperparameters chosen based on above grid search and cross validation
XGB_REINT_1yr <- predict(XGB_REINT_1yr, as.matrix(predictors_test))
auc(test$REINT_1yr, XGB_REINT_1yr)
ci.auc(test$REINT_1yr, XGB_REINT_1yr)
XGB_REINT_1yr_pred_0.5 <- ifelse(XGB_REINT_1yr_pred > 0.5,1,0)
confusionMatrix(as.factor(test$REINT_1yr), as.factor(XGB_REINT_1yr_pred_0.5))

XGB_INHOSP_COMP <- xgboost(data = as.matrix(predictors_train), label = as.numeric(train$INHOSP_COMP), nrounds = 200, verbose = TRUE, objective = 'binary:logistic', eval_metric = 'auc', max_depth = 3, eta = 0.3, gamma = 0, colsample_bytree = 0.6, min_child_weight = 1, subsample = 1)
XGB_INHOSP_COMP_pred <- predict(XGB_INHOSP_COMP, as.matrix(predictors_test))
auc(test$INHOSP_COMP, XGB_INHOSP_COMP_pred)
ci.auc(test$INHOSP_COMP, XGB_INHOSP_COMP_pred)
XGB_INHOSP_COMP_pred_0.5 <- ifelse(XGB_INHOSP_COMP_pred > 0.5,1,0)
confusionMatrix(as.factor(test$INHOSP_COMP), as.factor(XGB_INHOSP_COMP_pred_0.5))

XGB_non_home_dc <- xgboost(data = as.matrix(predictors_train), label = as.numeric(train$non_home_dc), nrounds = 200, verbose = TRUE, objective = 'binary:logistic', eval_metric = 'auc', max_depth = 3, eta = 0.3, gamma = 0, colsample_bytree = 0.6, min_child_weight = 1, subsample = 1)
XGB_non_home_dc_pred <- predict(XGB_non_home_dc, as.matrix(predictors_test))
auc(test$non_home_dc, XGB_non_home_dc_pred)
ci.auc(test$non_home_dc, XGB_non_home_dc_pred)
XGB_non_home_dc_pred_0.5 <- ifelse(XGB_non_home_dc_pred > 0.5,1,0)
confusionMatrix(as.factor(test$non_home_dc), as.factor(XGB_non_home_dc_pred_0.5))
